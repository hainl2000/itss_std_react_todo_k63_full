[{"C:\\Users\\Asus\\OneDrive\\Desktop\\bài tập\\japan itss\\itss_std_react_todo_k63_full\\src\\index.js":"1","C:\\Users\\Asus\\OneDrive\\Desktop\\bài tập\\japan itss\\itss_std_react_todo_k63_full\\src\\App.js":"2","C:\\Users\\Asus\\OneDrive\\Desktop\\bài tập\\japan itss\\itss_std_react_todo_k63_full\\src\\reportWebVitals.js":"3","C:\\Users\\Asus\\OneDrive\\Desktop\\bài tập\\japan itss\\itss_std_react_todo_k63_full\\src\\components\\Todo.js":"4","C:\\Users\\Asus\\OneDrive\\Desktop\\bài tập\\japan itss\\itss_std_react_todo_k63_full\\src\\components\\TodoItem.js":"5","C:\\Users\\Asus\\OneDrive\\Desktop\\bài tập\\japan itss\\itss_std_react_todo_k63_full\\src\\components\\Input.js":"6","C:\\Users\\Asus\\OneDrive\\Desktop\\bài tập\\japan itss\\itss_std_react_todo_k63_full\\src\\components\\Filter.js":"7","C:\\Users\\Asus\\OneDrive\\Desktop\\bài tập\\japan itss\\itss_std_react_todo_k63_full\\src\\lib\\firebase.js":"8","C:\\Users\\Asus\\OneDrive\\Desktop\\bài tập\\japan itss\\itss_std_react_todo_k63_full\\src\\components\\SignIn.js":"9"},{"size":517,"mtime":1656428154193,"results":"10","hashOfConfig":"11"},{"size":1076,"mtime":1656431336180,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1656428154196,"results":"13","hashOfConfig":"11"},{"size":2432,"mtime":1656431207991,"results":"14","hashOfConfig":"11"},{"size":407,"mtime":1656428154191,"results":"15","hashOfConfig":"11"},{"size":602,"mtime":1656428154189,"results":"16","hashOfConfig":"11"},{"size":694,"mtime":1656428154188,"results":"17","hashOfConfig":"11"},{"size":535,"mtime":1656429012362,"results":"18","hashOfConfig":"11"},{"size":986,"mtime":1656431136392,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"t8mn6p",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"C:\\Users\\Asus\\OneDrive\\Desktop\\bài tập\\japan itss\\itss_std_react_todo_k63_full\\src\\index.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\bài tập\\japan itss\\itss_std_react_todo_k63_full\\src\\App.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\bài tập\\japan itss\\itss_std_react_todo_k63_full\\src\\reportWebVitals.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\bài tập\\japan itss\\itss_std_react_todo_k63_full\\src\\components\\Todo.js",["43","44"],"import React, { useState, useEffect } from 'react';\r\n\r\n/* コンポーネント */\r\nimport TodoItem from './TodoItem';\r\nimport Input from './Input';\r\nimport Filter from './Filter';\r\n\r\n/* カスタムフック */\r\nimport db from '../lib/firebase'\r\nimport {collection, getDocs, addDoc, updateDoc, doc} from 'firebase/firestore'\r\n\r\n/* ライブラリ */\r\n// import {getKey} from \"../lib/util\";\r\n\r\nfunction Todo() {\r\n  const [items, putItems] = useState([]);\r\n  \r\n  const [filter, setFilter] = React.useState('ALL');\r\n\r\n  const itemCollection = collection(db, \"todos\")\r\n\r\n  const displayItems = items.filter(item => {\r\n    if (filter === 'ALL') return true;\r\n    if (filter === 'TODO') return !item.done;\r\n    if (filter === 'DONE') return item.done;\r\n  });\r\n  \r\n  const handleCheck = async(item) => {\r\n    const todo = doc(db,\"todos\",item.key)\r\n    console.log(todo.data)\r\n    const newField = {done: !item.done}\r\n    await updateDoc(todo,newField)\r\n  };\r\n\r\n  const deleteAll = async()=> {    \r\n    db.collection(\"todos\").get().then(res => {\r\n      res.forEach(element => {\r\n      element.ref.delete()\r\n      })\r\n    })\r\n  }\r\n  \r\n  const fetchTodos = async()=>{\r\n    const data = await getDocs(itemCollection)\r\n    putItems(data.docs.map((doc)=> ({...doc.data(), key: doc.id})))\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchTodos();\r\n  }, [items])\r\n  \r\n  const handleAdd = async(text) => {\r\n    await addDoc(itemCollection, {text: text, done: false})    \r\n  };\r\n  \r\n  const handleFilterChange = value => setFilter(value);\r\n\r\n  return (\r\n    <article className=\"panel is-danger\">\r\n      <div className=\"panel-heading\">\r\n        <span className=\"icon-text\">\r\n          <span className=\"icon\">\r\n            <i className=\"fas fa-calendar-check\"></i>\r\n          </span>\r\n          <span> ITSS Todoアプリ</span>\r\n        </span>\r\n      </div>\r\n      <Input onAdd={handleAdd} />\r\n      <Filter\r\n        onChange={handleFilterChange}\r\n        value={filter}\r\n      />\r\n      {displayItems.map(item => (\r\n        <TodoItem \r\n          key={item.key}\r\n          item={item}\r\n          onCheck={handleCheck}\r\n        />\r\n      ))}\r\n      <div className=\"panel-block\">\r\n        {displayItems.length} items\r\n      </div>\r\n      <div className=\"panel-block\">\r\n        <button className=\"button is-light is-fullwidth\" onClick={deleteAll}>\r\n          全てのToDoを削除\r\n        </button>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Todo;","C:\\Users\\Asus\\OneDrive\\Desktop\\bài tập\\japan itss\\itss_std_react_todo_k63_full\\src\\components\\TodoItem.js",[],"C:\\Users\\Asus\\OneDrive\\Desktop\\bài tập\\japan itss\\itss_std_react_todo_k63_full\\src\\components\\Input.js",["45"],"import React, { useState } from 'react';\r\n\r\nfunction Input( { onAdd } ) {\r\n  const [text, setText] = React.useState('');\r\n\r\n  const handleChange = e => setText(e.target.value);\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.keyCode === 13) {\r\n      onAdd(text);\r\n      setText('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"panel-block\">\r\n      <input\r\n        class=\"input\"\r\n        type=\"text\"\r\n        placeholder=\"Todoを入力してください\"\r\n        value={text}\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyDown}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","C:\\Users\\Asus\\OneDrive\\Desktop\\bài tập\\japan itss\\itss_std_react_todo_k63_full\\src\\components\\Filter.js",["46","47","48"],"function Filter({ value, onChange }) {\r\n\r\n  const handleClick = (key, e) => {\r\n    e.preventDefault();\r\n    onChange(key);\r\n  };\r\n\r\n  return (\r\n    <div className=\"panel-tabs\">\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'ALL')}\r\n        className={value === 'ALL' ?  'is-active' : ''}\r\n      >全て</a>\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'TODO')}\r\n        className={value === 'TODO' ?  'is-active' : ''}\r\n      >未完了</a>\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'DONE')}\r\n        className={value === 'DONE' ?  'is-active' : ''}\r\n      >完了済み</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter","C:\\Users\\Asus\\OneDrive\\Desktop\\bài tập\\japan itss\\itss_std_react_todo_k63_full\\src\\lib\\firebase.js",[],["49","50"],"C:\\Users\\Asus\\OneDrive\\Desktop\\bài tập\\japan itss\\itss_std_react_todo_k63_full\\src\\components\\SignIn.js",["51"],"import React, { useEffect} from \"react\";\r\nimport StyleFirebaseUi from 'react-firebaseui/StyledFirebaseAuth'\r\nimport firebase from \"firebase/compat\";\r\nimport db from '../lib/firebase'\r\nimport {collection,  addDoc} from 'firebase/firestore'\r\nvar uiConfig = {\r\n    signInFlow: \"popup\",\r\n    signInOptions: [\r\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID\r\n    ],\r\n    signInSuccessUrl: '/'\r\n}\r\n\r\nconst SignIn = ({setUsername}) => {\r\n    const userCollection = collection(db, \"users\")\r\n    useEffect(()=> {\r\n        const authObserver =  firebase.auth().onAuthStateChanged( async(user)=> {\r\n            if(user) {\r\n                await addDoc(userCollection, {name: user.displayName })\r\n                setUsername(user.displayName)\r\n            }                \r\n            else setUsername(\"\")\r\n         })\r\n    })\r\n    return(\r\n        <div>\r\n            <StyleFirebaseUi uiConfig={uiConfig} firebaseAuth={firebase.auth()}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SignIn",{"ruleId":"52","severity":1,"message":"53","line":22,"column":42,"nodeType":"54","messageId":"55","endLine":22,"endColumn":44},{"ruleId":"56","severity":1,"message":"57","line":50,"column":6,"nodeType":"58","endLine":50,"endColumn":13,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"65","line":10,"column":7,"nodeType":"66","endLine":14,"endColumn":8},{"ruleId":"64","severity":1,"message":"65","line":15,"column":7,"nodeType":"66","endLine":19,"endColumn":8},{"ruleId":"64","severity":1,"message":"65","line":20,"column":7,"nodeType":"66","endLine":24,"endColumn":8},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"60","severity":1,"message":"71","line":17,"column":15,"nodeType":"62","messageId":"63","endLine":17,"endColumn":27},"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchTodos'. Either include it or remove the dependency array.","ArrayExpression",["72"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["73"],"no-negated-in-lhs",["74"],"'authObserver' is assigned a value but never used.",{"desc":"75","fix":"76"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [fetchTodos, items]",{"range":"77","text":"78"},[1291,1298],"[fetchTodos, items]"]